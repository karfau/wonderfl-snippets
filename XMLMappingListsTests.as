// forked from karfau's wonderfl trace topmost multiline// forked from kalevionni's wonderfl trace// modified to start tracing topmost // and scrolling depending on the real size of the textfield,// this makes it possible to trace multiline (e.g. xml)// Howto:// 1. cut and paste everything bellow the "WONDERFL TRACE" line to the end of your script// 2. insert inittrace(stage); to the constructor of your main class// 3. done! package {	import flash.utils.ByteArray;	import flash.utils.getQualifiedClassName;    import flash.display.Sprite;    import flash.events.*;    import flash.text.TextField;        public class TraceTest extends Sprite {                private var objectTypeIsArray:Boolean;        private var elementName:QName;                public function TraceTest() {            //This is all the initialization you need in your main class            inittrace(stage); /*                       var xml:XML = <data/>;            xml.appendChild(<element/>);            //xml.appendChild(<element/>);            //xml.appendChild(<element/>);            xml.element[0] = "Hello World";                        // demonstration                        trace("Hello","World!",1,2,3,stage,5);            trace("Something else");            trace(stage);            trace(794613);            trace("wonderfl!");            trace(xml["element"].toXMLString());            */                            this.objectTypeIsArray = false ;        		elementName = new QName(this.objectTypeIsArray ? "item" : "list");                        var arrTest:Array = [1,5,"test",0.5,true,uint(0xfff77dd),["Hello","WORLD"],<data/>.appendChild(<wow size="0"/>)];            var objTest:Object = new Object();            objTest.myOwnProperty = 1;            objTest.["myOtherProperty"] = 0.5;            objTest.hello = "Hello World";            objTest.foo = true;                        if(this.objectTypeIsArray){	            for each(var item:* in objTest){	            		trace(this.mapToXml(item));	            }	        }else{	        		trace(this.mapToXml(objTest));	        	}	        	        }         		public function mapToXml (object:Object):XML {			var result:XML;			if (this.objectTypeIsArray) { 				//for arrays we only create a node as object is one of the values 				result = createNode(object, this.elementName.localName, true);			} else { 				//object is something like ArrayCollection, Object or the like so result is the root, containing all the values 				result = createNode(object, this.elementName.localName, false);				for each (var item:*in object) {					result.appendChild(createNode(item));				}			}			return result;		}				private function createNode (item:Object, tagname:String="item", appendObjectAsChild:Boolean=true):XML {			var node:XML = <{tagname} type={getQualifiedClassName(item)}/>;			if(appendObjectAsChild) node.appendChild(item.toString());			//xml-notation of node			//trace(node.toXMLString());			//only the value of item becaue of toString()			//trace(node);			return node;		}    	}}/////  WONDERFL TRACE /////import flash.display.Sprite;import flash.display.Stage;import flash.text.TextField;import flash.text.TextFormat;function inittrace(s:Stage):void{    WTrace.initTrace(s);}//global trace functionvar trace:Function;//wtreace classclass WTrace{        private static var FONT:String = "Fixedsys";        private static var SIZE:Number = 12;        private static var TextFields:Array = [];        private static var trace_stage:Stage;                public static function initTrace(stg:Stage):void        {            trace_stage = stg;            trace = wtrace;        }                private static function scrollup(heightOfLastTextField : Number):void        {        	    // maximum number of lines: 100            if (TextFields.length > 100)             {                var removeme:TextField = TextFields.shift();                trace_stage.removeChild(removeme);                removeme = null;            }            for(var x:Number=0;x<TextFields.length;x++)            {                (TextFields[x] as TextField).y += heightOfLastTextField;            }        }            public static function wtrace(... args):void        {                    var s:String="";            var tracefield:TextField;                        for (var i:int;i < args.length;i++)            {                // imitating flash:                // putting a space between the parameters                if (i != 0) s+=" ";                s+=args[i].toString();            }                        tracefield= new TextField();            tracefield.autoSize = "left";            tracefield.text = s;            tracefield.y = 0;            var tf:TextFormat = new TextFormat(FONT, SIZE);            tracefield.setTextFormat(tf);            trace_stage.addChild(tracefield);            scrollup(tracefield.height);                                  TextFields.push(tracefield);                    }}